/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.InventoryManager;

import Business.Animal.Animal;
import Business.EcoSystem;
import Business.Enterprise.AnimalShelterEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InventoryWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Youming Zheng
 */
public class SendWorkRequest extends javax.swing.JPanel {

    /**
     * Creates new form SendWorkRequest
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    Organization organization;
    Enterprise enterprise;
    Network network;
    EcoSystem system;

    SendWorkRequest(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.organization=organization;
        this.enterprise=enterprise;
        this.network=network;
        this.system=system;
        
        populateJcbEnterprise();
        populateHistory();
        populateCustomerRequest();
    }
    
    
    
    
    
    
    public void populateTable(Enterprise enterprise){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        
        model.setRowCount(0);
        if(enterprise.getAnimalDirectory()!=null){
            for (Animal animal : enterprise.getAnimalDirectory().getAnimalDirectory()){
            Object[] row = new Object[5];
            row[0] = animal;
            row[1] = animal.getBreed();
            row[2]=animal.getGender();
            row[3]=animal.getColor();
            row[4]=animal.getAge();
           
            
            model.addRow(row);
            }
        }
        
    }
    
    
    
    
    
    
    
    public void populateHistory(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        model.setRowCount(0);
        
        
        for (WorkRequest wr : enterprise.getWorkQueueSent().getWorkRequestList()){
        InventoryWorkRequest inwr=(InventoryWorkRequest)wr;
        Object[] row = new Object[6];
        row[0] = inwr;
        row[1] = inwr.getSender();
        row[2]=inwr.getAnimal();
        row[3]=inwr.getAnimal().getBreed();
        row[4]=inwr.getMessage();
        row[5]=inwr.getStatus();
           
            
        model.addRow(row);
        }
        
        
    }
    
    
    
    
    
    public void populateCustomerRequest(){
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        
        model.setRowCount(0);
        
        
        for (WorkRequest wr : organization.getWorkQueueReceived().getWorkRequestList()){
        InventoryWorkRequest inwr=(InventoryWorkRequest)wr;
        Object[] row = new Object[6];
        row[0] = inwr;
        row[1] = inwr.getSender();
        row[2]=inwr.getAnimal();
        row[3]=inwr.getAnimal().getBreed();
        row[4]=inwr.getMessage();
        row[5]=inwr.getStatus();
           
            
        model.addRow(row);
        }
    }
    
    
    
    
    
    
    
    public void populateJcbEnterprise(){
        jcbEnterprise.removeAllItems();
        
        for(Enterprise en:network.getEnterpriseDirectory().getEnterpriseList()){
            if(en instanceof AnimalShelterEnterprise){
                jcbEnterprise.addItem(en);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jcbEnterprise = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shelter", "Sender", "Animal ID", "Breed", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 738, 655, 208));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enterprise:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 86, -1, -1));

        jcbEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEnterpriseActionPerformed(evt);
            }
        });
        add(jcbEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 86, 174, -1));

        jButton1.setText("Cancle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(705, 964, 89, 37));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Breed", "Gender", "Color", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 129, 655, 208));

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(705, 355, 89, 37));
        add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 362, 286, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("History:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 709, -1, -1));

        jLabel1.setText("Add Message:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 365, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 976, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Customer Request:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 399, -1, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shelter", "Sender", "Animal ID", "Breed", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
            jTable3.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 428, 655, 208));

        jButton3.setText("Send");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(705, 654, 89, 37));

        jButton4.setText("Reject");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 654, 89, 37));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Send Work Request");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jcbEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEnterpriseActionPerformed
        // TODO add your handling code here:
        Enterprise ent=(Enterprise)jcbEnterprise.getSelectedItem();
        
        if(ent!=null){
            populateTable(ent);
        }
    }//GEN-LAST:event_jcbEnterpriseActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        /*
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        JOptionPane.showMessageDialog(null, "No Person Found!","Warining",JOptionPane.WARNING_MESSAGE);
        
        */
        
        int selectedRow=jTable2.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please Select a Row First!","Warining",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Enterprise en=(Enterprise)jcbEnterprise.getSelectedItem();
        if(en==enterprise){
            JOptionPane.showMessageDialog(null, "Wrong Enterprise!","Warining",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Animal an=(Animal)jTable2.getValueAt(selectedRow, 0);
        
        InventoryWorkRequest iwr=new InventoryWorkRequest();
        iwr.setAnimal(an);
        iwr.setEnterpriseSend(enterprise);
        iwr.setEnterpriseReceive(en);
        iwr.setSender(userAccount);
        iwr.setStatus("sent");
        String message=txtMessage.getText();
        try{
                iwr.setMessage(message);
            }catch(Exception e){
                iwr.setMessage(enterprise.getName()+" "+"Sent You an Request");
            }
        
        
        enterprise.getWorkQueueSent().getWorkRequestList().add(iwr);
        en.getWorkQueueReceived().getWorkRequestList().add(iwr);
        
        
        populateHistory();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow=jTable1.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        
        InventoryWorkRequest ii=(InventoryWorkRequest)jTable1.getValueAt(selectedRow, 0);
        
         int dialogResult=JOptionPane.showConfirmDialog(null, "Are You Sure to Withdraw the Request?", "Waring",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                enterprise.getWorkQueueSent().getWorkRequestList().remove(ii);
                ii.getEnterpriseReceive().getWorkQueueReceived().getWorkRequestList().remove(ii);
                 JOptionPane.showMessageDialog(null, "Work Request Cancled Successfully!");
            }
            
        populateHistory();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable3.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first!","Warining",JOptionPane.WARNING_MESSAGE);
            return;
        }
        InventoryWorkRequest iwr=(InventoryWorkRequest)jTable3.getValueAt(selectedRow, 0);
        
        enterprise.getWorkQueueSent().getWorkRequestList().add(iwr);
        iwr.getEnterpriseReceive().getWorkQueueReceived().getWorkRequestList().add(iwr);
        iwr.setStatus("Approved");
        organization.getWorkQueueReceived().getWorkRequestList().remove(iwr);
        
        
        populateHistory();
        populateCustomerRequest();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable3.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first!","Warining",JOptionPane.WARNING_MESSAGE);
            return;
        }
        InventoryWorkRequest iwr=(InventoryWorkRequest)jTable3.getValueAt(selectedRow, 0);
        
        iwr.setStatus("Rejected");
        organization.getWorkQueueReceived().getWorkRequestList().remove(iwr);
        
        populateCustomerRequest();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JComboBox jcbEnterprise;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
