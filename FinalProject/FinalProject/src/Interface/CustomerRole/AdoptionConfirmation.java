/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.CustomerRole;

import Business.Animal.Animal;
import Business.EcoSystem;
import Business.Enterprise.AnimalShelterEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CertificationOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.Person.Customer;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdoptionWorkRequest;
import Business.WorkQueue.InventoryWorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Youming Zheng
 */
public class AdoptionConfirmation extends javax.swing.JPanel {

    /**
     * Creates new form AdoptionConfirmation
     */
    
    JPanel userProcessContainer;
    UserAccount userAccount;
    Enterprise enterprise;
    Network network;
    EcoSystem system;
    Animal animal;
    //form the inventoryWorkRequest's view
    AnimalShelterEnterprise aseSend;
    AnimalShelterEnterprise aseReceive;
    ArrayList<AnimalShelterEnterprise> lalala=new ArrayList<AnimalShelterEnterprise>();
    private boolean flag;

    AdoptionConfirmation(JPanel userProcessContainer, UserAccount userAccount, Animal ann, AnimalShelterEnterprise asee, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
       this.userProcessContainer=userProcessContainer;
       this.userAccount=userAccount;
       this.animal=ann;
       this.aseReceive=asee;
       this.enterprise=enterprise;
       this.network=network;
       this.system=system;
       
       populateInformation();
    }
    
    public void populateimage(String url, JLabel lbl) {

            ImageIcon imageIcon = new ImageIcon(url);
            Image image = imageIcon.getImage();
            Image smallImage = image.getScaledInstance(200, 200, Image.SCALE_FAST);
            ImageIcon smallIcon = new ImageIcon(smallImage);
            lbl.setIcon(smallIcon);
            
    }
    
    private void populateInformation(){
        
        txtSpecies.setText(animal.getSpecies());
        txtBreed.setText(animal.getBreed());
        txtGender.setText(animal.getGender());
        txtColor.setText(animal.getColor());
        txtAge.setText(animal.getAge());
        //jlPhoto.setIcon(animal.getIcon());
        populateimage(animal.getPicturepath(), jlPhoto);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSpecies = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlPhoto = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBreed = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 255));
        jLabel1.setText("Our System provides the service to pick up a particular pet at any animal Shelter in the state as you want ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 378, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 636, -1, -1));

        jLabel5.setText("Species:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jLabel3.setText("Breed:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        txtSpecies.setEditable(false);
        add(txtSpecies, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 170, -1));

        jLabel4.setText("Gender:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        jLabel6.setText("Color:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        jlPhoto.setText("           photo here");
        add(jlPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 189, 165));

        jLabel7.setText("Age:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));

        txtGender.setEditable(false);
        add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 170, -1));

        txtAge.setEditable(false);
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 170, -1));

        txtColor.setEditable(false);
        add(txtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 170, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Animal Information:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 280, 60));

        txtBreed.setEditable(false);
        add(txtBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 170, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 255));
        jLabel2.setText("Please select an animal shelter where you whish to meet your pet at your convenience:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 413, -1, -1));

        jLabel9.setText("Zip Code:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 456, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 453, 128, -1));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 493, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Animal Shelter", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(407, 453, 497, 157));

        jButton2.setText("Submit Application");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(765, 636, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel10.setText("Adoption Confirmation");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        lalala.clear();
        
        for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise instanceof AnimalShelterEnterprise) {
                if(enterprise.getZipCode()!= null){
                    if(((AnimalShelterEnterprise)enterprise).getZipCode().equals(jTextField1.getText())){
                        lalala.add((AnimalShelterEnterprise)enterprise);
                    }
                }
                
            }
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
         for (AnimalShelterEnterprise ase : lalala){
            Object[] row = new Object[2];
            row[0] = ase;
            row[1] = ase.getAddress();
           
            
            model.addRow(row);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first!","Warining",JOptionPane.WARNING_MESSAGE);
            return;
        }
        AnimalShelterEnterprise ase=(AnimalShelterEnterprise)jTable1.getValueAt(selectedRow, 0);
        
        AdoptionWorkRequest adoptionWR=new AdoptionWorkRequest();
        adoptionWR.setAdopter((Customer) userAccount.getPerson());
        adoptionWR.setAnimal(animal);
        adoptionWR.setSender(userAccount);
        adoptionWR.setStatus("Unhandled");
        for(Organization org:ase.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof CertificationOrganization){
                org.getAdoptionWorkQueue().getAdoptionWorkRequestList().add(adoptionWR);
                break;
            }
        }
        
        if(aseSend!=aseReceive){
            aseSend=ase;
            InventoryWorkRequest iwr=new InventoryWorkRequest();
            iwr.setAnimal(animal);
            iwr.setEnterpriseSend(aseSend);
            iwr.setEnterpriseReceive(aseReceive);
            iwr.setSender(userAccount);
            iwr.setStatus("waiting for approval");
            iwr.setMessage("Required by Customer");
            for(Organization orga:aseSend.getOrganizationDirectory().getOrganizationList()){
                if(orga instanceof InventoryOrganization){
                    orga.getWorkQueueReceived().getWorkRequestList().add(iwr);
                    break;
                }
            }
        }
        
        animal.setStatus(false);
        JOptionPane.showMessageDialog(null, "Your application is completed, please plan to visit the animal shelter you choosed and take certification");
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jlPhoto;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBreed;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtSpecies;
    // End of variables declaration//GEN-END:variables
}
