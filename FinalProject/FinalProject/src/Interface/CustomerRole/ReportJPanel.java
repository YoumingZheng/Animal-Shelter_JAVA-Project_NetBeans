/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.CustomerRole;

import Business.Animal.Animal;
import Business.EcoSystem;
import Business.Enterprise.AnimalShelterEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CertificationOrganization;
import Business.Organization.Organization;
import Business.Person.Customer;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InspectionWorkRequest;
import Business.WorkQueue.LostAnimalWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brandonz
 */
public class ReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReportJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    Enterprise enterprise;
    Network network;
    EcoSystem system;
    ImageIcon icon;
    String picturepath=null;
    
    public ReportJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this. userAccount=userAccount;
        this.enterprise=enterprise;
        this.network=network;
        this.system=system;
        refresh1();
        
        btnRequest.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pictureLable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxtGender = new javax.swing.JTextField();
        TxtBreed = new javax.swing.JTextField();
        TxtColor = new javax.swing.JTextField();
        TxtAge = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnRequest = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TxtSpecies = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pictureLable.setText("       photo");
        add(pictureLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 344, 170, 143));

        jLabel2.setText("Gender");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 197, -1, -1));

        jLabel3.setText("Breed");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 162, 44, -1));

        jLabel4.setText("Color");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 237, 44, -1));

        jLabel5.setText("Age");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 269, 44, -1));
        add(TxtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 194, 87, -1));

        TxtBreed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBreedActionPerformed(evt);
            }
        });
        add(TxtBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 159, 87, -1));
        add(TxtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 234, 87, -1));
        add(TxtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 266, 79, -1));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 306, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 307, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Species", "Breed", "Gender", "Color", "Age", "Similarity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 689, 427));

        btnRequest.setText("Request");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });
        add(btnRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 500, 99, -1));

        jLabel6.setText("Species");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 133, -1, -1));
        add(TxtSpecies, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 130, 87, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 545, -1, -1));

        jButton2.setText("Upload photo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 502, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Report Lost Animal");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void TxtBreedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBreedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBreedActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        AnimalShelterEnterprise ase=(AnimalShelterEnterprise)jComboBox1.getSelectedItem(); 
        DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();  
        dtm.setRowCount(0);
        for(Animal an:ase.getAnimalDirectory().getAnimalDirectory()){
            if(TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge())){
                  an.setSimilarity(5);
            } else if((TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor()))||(TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtAge.getText().equals(an.getAge()))||(TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))||(TxtBreed.getText().equals(an.getBreed())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))){
              an.setSimilarity(4);
            }else if((TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender()))||(TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtColor.getText().equals(an.getColor()))||(TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies())&&TxtAge.getText().equals(an.getAge()))||(TxtBreed.getText().equals(an.getBreed())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor()))||(TxtBreed.getText().equals(an.getBreed())&&TxtGender.getText().equals(an.getGender())&&TxtAge.getText().equals(an.getAge()))||(TxtBreed.getText().equals(an.getBreed())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender())&&TxtAge.getText().equals(an.getAge()))||(TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))){
                  an.setSimilarity(3);   
            }
            else if((TxtBreed.getText().equals(an.getBreed())&&TxtSpecies.getText().equals(an.getSpecies()))||(TxtBreed.getText().equals(an.getBreed())&&TxtGender.getText().equals(an.getGender()))||(TxtBreed.getText().equals(an.getBreed())&&TxtColor.getText().equals(an.getColor()))||(TxtBreed.getText().equals(an.getBreed())&&TxtAge.getText().equals(an.getAge()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtGender.getText().equals(an.getGender()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtColor.getText().equals(an.getColor()))||(TxtSpecies.getText().equals(an.getSpecies())&&TxtAge.getText().equals(an.getAge()))||(TxtGender.getText().equals(an.getGender())&&TxtColor.getText().equals(an.getColor()))||(TxtGender.getText().equals(an.getGender())&&TxtAge.getText().equals(an.getAge()))||(TxtColor.getText().equals(an.getColor())&&TxtAge.getText().equals(an.getAge()))){
                    an.setSimilarity(2);
            }
            else{
                 if((TxtBreed.getText().equals(an.getBreed()))||(TxtSpecies.getText().equals(an.getSpecies()))||(TxtGender.getText().equals(an.getGender()))||(TxtColor.getText().equals(an.getColor()))||(TxtAge.getText().equals(an.getAge()))){
                 an.setSimilarity(1);
                 }   
            }
        }
            Collections.sort(ase.getAnimalDirectory().getAnimalDirectory(),new Comparator<Animal>(){
                public int compare(Animal o1,Animal o2){
                return Double.compare( o2.getSimilarity(),o1.getSimilarity());
                }
            });
            
            
            for(Animal an:ase.getAnimalDirectory().getAnimalDirectory()){
                if(an.isStatus()){
                    Object[] row = new Object[7];
                  row[0] = an;
                  row[1] = an.getBreed();
                  row[2] = an.getSpecies();
                  row[3] = an.getGender();
                  row[4] = an.getColor();
                  row[5] = an.getAge();
                  row[6] = an.getSimilarity();
                  dtm.addRow(row);
                }
                  
            
            }
            
            
        
        /*for (Network network : system.getNetworkList()) {
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if(TxtBreed.getText().equals(jComboBox1.getSelectedItem()..getBreed())&&TxtGender.getText().equals(animal.getGender())&&TxtColor.getText().equals(anim)&&TxtAge.getText().equals(ABORT){
                            
                        
                    }
            }    
        } */ // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed
   
    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        int selectedRow=jTable1.getSelectedRow();
        AnimalShelterEnterprise ase=(AnimalShelterEnterprise)jComboBox1.getSelectedItem();  
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null,"please select a row first!");
            return;
        }
        if(selectedRow>=0){
        Animal an = (Animal) jTable1.getValueAt(selectedRow, 0);
        an.setStatus(false);
        for(Organization o: ase.getOrganizationDirectory().getOrganizationList()){
            if(o instanceof CertificationOrganization){
        LostAnimalWorkRequest law = new LostAnimalWorkRequest();
        law.setAnimal(an);
        law.setLostCustomer((Customer)userAccount.getPerson());
        law.setSender(userAccount);
        //law.setIcon(icon);
        law.setPicturepath(picturepath);
        o.getLostAnimalWorkQueue().getWorkRequestList().add(law);
        RequestLost requestLost1 = new RequestLost(userProcessContainer,userAccount,law);
        userProcessContainer.add("requestLostl",requestLost1);    
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.show(userProcessContainer,"requestLostl");
        break;
            }
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRequestActionPerformed
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        /*JFileChooser imgc = new JFileChooser();
        imgc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = imgc.showOpenDialog(null);
        String path;
        path = imgc.getSelectedFile().getAbsolutePath();
        if(i== imgc.APPROVE_OPTION){
            
            String name = imgc.getSelectedFile().getName();
            System.out.println("path:"+path+"; name:"+name);
        }else{
            System.out.println("no document");
        }
        icon = new ImageIcon(path);
        icon.setImage(icon.getImage().getScaledInstance(150,150,Image.SCALE_DEFAULT));
        pictureLable.setIcon(icon);*/
        
        picturepath = null;
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(null);
        File pic = jfc.getSelectedFile();
        if (pic!=null&&pic.getAbsolutePath().endsWith(".jpg")){
            
            picturepath = pic.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(picturepath);
            Image image = imageIcon.getImage();
            Image smallImage = image.getScaledInstance(169,169,Image.SCALE_FAST);
            ImageIcon smallIcon = new ImageIcon(smallImage);
            pictureLable.setIcon(smallIcon);
        }
        
        jButton2.setEnabled(false);
        btnRequest.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtAge;
    private javax.swing.JTextField TxtBreed;
    private javax.swing.JTextField TxtColor;
    private javax.swing.JTextField TxtGender;
    private javax.swing.JTextField TxtSpecies;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnRequest;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel pictureLable;
    // End of variables declaration//GEN-END:variables

    private void refresh1() {
        jComboBox1.removeAllItems();
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if(enterprise instanceof AnimalShelterEnterprise){
                jComboBox1.addItem(enterprise);
            }
        }
            
         //To change body of generated methods, choose Tools | Templates.
    }
    }

    
    
}
